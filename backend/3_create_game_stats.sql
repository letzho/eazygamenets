BEGIN;


DROP TABLE IF EXISTS public.game_stats CASCADE;

CREATE TABLE public.game_stats (
  id                    integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id               integer NOT NULL
                         REFERENCES public.users(id) ON DELETE CASCADE,
  game_type             varchar(50) NOT NULL,             -- e.g. 'candy-crush'
  games_played          integer NOT NULL DEFAULT 0,
  wins                  integer NOT NULL DEFAULT 0,
  best_score            integer NOT NULL DEFAULT 0,
  total_credits_earned  integer NOT NULL DEFAULT 0,
  created_at            timestamp without time zone NOT NULL DEFAULT NOW(),
  updated_at            timestamp without time zone NOT NULL DEFAULT NOW(),
  CONSTRAINT game_stats_user_game_unique UNIQUE (user_id, game_type)
);


CREATE INDEX idx_game_stats_user_id   ON public.game_stats(user_id);
CREATE INDEX idx_game_stats_game_type ON public.game_stats(game_type);


CREATE OR REPLACE FUNCTION set_game_stats_updated_at()
RETURNS trigger AS $$
BEGIN
  NEW.updated_at := NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS trg_game_stats_updated_at ON public.game_stats;
CREATE TRIGGER trg_game_stats_updated_at
BEFORE UPDATE ON public.game_stats
FOR EACH ROW EXECUTE FUNCTION set_game_stats_updated_at();

COMMIT;
