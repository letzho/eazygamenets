BEGIN;


CREATE TABLE IF NOT EXISTS public.voucher_transactions (
  id               integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id          integer NOT NULL,
  transaction_type varchar(20) NOT NULL,           -- 'earned' | 'used'
  quantity         integer NOT NULL DEFAULT 0,
  credits_used     integer NOT NULL DEFAULT 0,
  payment_id       integer,                         -- nullable
  created_at       timestamp WITHOUT TIME ZONE NOT NULL DEFAULT now(),
  CONSTRAINT voucher_transactions_type_ck
    CHECK (transaction_type IN ('earned','used'))
);


DO $$
BEGIN
  IF EXISTS (
    SELECT 1 FROM information_schema.tables
    WHERE table_schema='public' AND table_name='users'
  ) AND NOT EXISTS (
    SELECT 1 FROM pg_constraint WHERE conname='voucher_transactions_user_id_fkey'
  ) THEN
    ALTER TABLE public.voucher_transactions
      ADD CONSTRAINT voucher_transactions_user_id_fkey
      FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;
  END IF;

  IF EXISTS (
    SELECT 1 FROM information_schema.tables
    WHERE table_schema='public' AND table_name='payments'
  ) AND NOT EXISTS (
    SELECT 1 FROM pg_constraint WHERE conname='voucher_transactions_payment_id_fkey'
  ) THEN
    ALTER TABLE public.voucher_transactions
      ADD CONSTRAINT voucher_transactions_payment_id_fkey
      FOREIGN KEY (payment_id) REFERENCES public.payments(id) ON DELETE SET NULL;
  END IF;
END$$;


CREATE INDEX IF NOT EXISTS idx_vt_user_id     ON public.voucher_transactions(user_id);
CREATE INDEX IF NOT EXISTS idx_vt_payment_id  ON public.voucher_transactions(payment_id);
CREATE INDEX IF NOT EXISTS idx_vt_created_at  ON public.voucher_transactions(created_at);

COMMIT;
