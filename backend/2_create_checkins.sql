BEGIN;


DROP TABLE IF EXISTS public.check_ins CASCADE;

CREATE TABLE public.check_ins (
  id               integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id          integer NOT NULL
                   REFERENCES public.users(id) ON DELETE CASCADE,
  last_check_in    timestamp without time zone NULL,
  current_streak   integer NOT NULL DEFAULT 0,
  total_check_ins  integer NOT NULL DEFAULT 0,
  created_at       timestamp without time zone NOT NULL DEFAULT NOW(),
  updated_at       timestamp without time zone NOT NULL DEFAULT NOW(),
  CONSTRAINT check_ins_user_unique UNIQUE (user_id) -- one row per user
);


CREATE INDEX idx_check_ins_user_id ON public.check_ins(user_id);


CREATE OR REPLACE FUNCTION set_check_ins_updated_at()
RETURNS trigger AS $$
BEGIN
  NEW.updated_at := NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS trg_check_ins_updated_at ON public.check_ins;
CREATE TRIGGER trg_check_ins_updated_at
BEFORE UPDATE ON public.check_ins
FOR EACH ROW EXECUTE FUNCTION set_check_ins_updated_at();

COMMIT;
